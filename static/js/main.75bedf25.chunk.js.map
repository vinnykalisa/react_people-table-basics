{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","types/ErrorType.ts","components/PersonLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","components/NavigationLink/NavigationLink.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","getPerson","people","name","find","person","ErrorType","PersonLink","slug","sex","to","classNames","PersonInfo","useParams","slugOfPerson","born","died","fatherName","motherName","mother","father","PeopleList","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","useEffect","peopleFromServer","length","peopleWithParents","EmptyData","catch","LoadingError","finally","NavigationLink","title","isActive","NavBar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.75bedf25.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n\nexport function getPerson(people: Person[], name: string | null) {\n  return (\n    people.find((person) => person.name === name));\n}\n","export enum ErrorType {\n  EmptyData = 'There are no people on the server',\n  LoadingError = 'Something went wrong',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const { slug: slugOfPerson = '' } = useParams();\n\n  const {\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={slug}\n      className={classNames({\n        'has-background-warning': slug === slugOfPerson,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'}\n      </td>\n\n      <td>\n        {father\n          ? <PersonLink person={father} />\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonInfo\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople, getPerson } from '../../api';\nimport { ErrorType } from '../../types/ErrorType';\nimport { PeopleList } from '../PeopleList/PeopleList';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState<ErrorType | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        if (peopleFromServer.length === 0) {\n          setHasError(ErrorType.EmptyData);\n\n          return;\n        }\n\n        const peopleWithParents = peopleFromServer.map((person) => ({\n          ...person,\n          mother: getPerson(peopleFromServer, person.motherName),\n          father: getPerson(peopleFromServer, person.fatherName),\n        }));\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => setHasError(ErrorType.LoadingError))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {hasError === ErrorType.LoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {ErrorType.LoadingError}\n            </p>\n          )}\n\n          {hasError === ErrorType.EmptyData && (\n            <p data-cy=\"noPeopleMessage\">\n              {ErrorType.EmptyData}\n            </p>\n          )}\n\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <PeopleList people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string;\n  title: string;\n}\n\nexport const NavigationLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {title}\n  </NavLink>\n);\n","import React from 'react';\nimport { NavigationLink } from '../NavigationLink';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLink to=\"/\" title=\"Home\" />\n        <NavigationLink to=\"/people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nimport './App.scss';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}